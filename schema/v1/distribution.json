{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://raw.githubusercontent.com/iconmaster5326/YGOJSON/main/schema/v1/distribution.json",
  "title": "Distribution",

  "description": "A distribution is a particlar method of randomly (or not so randomly) laying out cards in a set. This determines how to pull packs, and so on.",
  "type": "object",
  "required": ["$schema", "id", "slots"],
  "properties": {
    "$schema": {
      "const": "https://raw.githubusercontent.com/iconmaster5326/YGOJSON/main/schema/v1/distribution.json"
    },
    "id": {
      "description": "The UUID of this distribution. The name of the distribution's file should be this UUID.",
      "type": "string",
      "format": "uuid"
    },
    "name": {
      "description": "A human-readable name for this distribution. This need have no bearing on reality, and is only useful for identifying what this distrobution represents.",
      "type": "string"
    },
    "slots": {
      "description": "An array of slots in the pack.",
      "type": "array",
      "items": {
        "description": "One or more slots, aka a card that is randomized according to certain rarity rules.",
        "oneOf": [
          {
            "description": "This indicates that some cards are to be drawn from based on a rarity pool.",
            "type": "object",
            "required": ["type"],
            "properties": {
              "type": { "const": "pool" },
              "set": {
                "description": "The UUID of the set to draw cards from, other than the current set. This is not normally needed, but is useful in places like Master Duel secret packs, which consist partly of Master Packs.",
                "type": "string",
                "format": "uuid"
              },
              "rarity": {
                "description": "The rarities to pull from.",
                "type": "array",
                "items": {
                  "description": "An entry in a probability table. Represents a 1:X chance of this rarity being selected.",
                  "type": "object",
                  "required": [],
                  "properties": {
                    "chance": {
                      "description": "A 1:X probability. For example, the chance of an ultra rare is '6' here, for a 1:6 chance. Defult 1.",
                      "type": "number"
                    },
                    "rarities": {
                      "description": "A list of rarities to pull from with equal chance. If omitted, we pull from the full card pool.",
                      "type": "array",
                      "items": {
                        "description": "A rarity constant.",
                        "$ref": "https://raw.githubusercontent.com/iconmaster5326/YGOJSON/main/schema/v1/rarity.json"
                      }
                    }
                  }
                }
              },
              "qty": {
                "description": "How many cards are drawn. Default 1.",
                "type": "integer"
              },
              "cardTypes": {
                "description": "Some sets (old reprint sets, for one) only had monsters, spells, or traps in certain slots. If provided, will only generate cards of the given types in this slot.",
                "type": "array",
                "items": {
                  "enum": ["monster", "spell", "trap", "token", "skill"]
                }
              },
              "duplicates": {
                "description": "Most of the time, you can't get the same card twice at the same rarity in a pack, even if it's common. (In physical sets, this is due to how printing sheets work, so it's not a 100% chance, but it might as well be for our purposes.) If you want to override this, set this to true.",
                "type": "boolean"
              },
              "proportionate": {
                "description": "Normally, the probability table doesn't take into account the relative sizes of each pool. When this field is true, the chances will be changed so that the probabilities will take into account said relative sizes. This is used for dual common/short-print slots, for example.",
                "type": "boolean"
              }
            }
          },
          {
            "description": "This indicates that some cards are guaranteed to appear here.",
            "type": "object",
            "required": ["type", "printings"],
            "properties": {
              "type": { "const": "guaranteedPrintings" },
              "printings": {
                "description": "Puts cards one after the other into the pack.",
                "type": "array",
                "items": {
                  "description": "A UUID to a card printing.",
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          },
          {
            "description": "This indicates that a set is guaranteed to appear here.",
            "type": "object",
            "required": ["type", "set"],
            "properties": {
              "type": { "const": "guaranteedSet" },
              "set": {
                "description": "Put the full contents of sets one after the other into the pack. A set UUID.",
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ]
      }
    }
  }
}
